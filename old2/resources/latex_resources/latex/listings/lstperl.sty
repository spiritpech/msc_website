%%
%% This is file `lstperl.sty',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% listings.dtx  (with options: `perl')
%% lstdrvrs.dtx  (with options: `perl')
%% 
%% (w)(c) 1996,1997,1998 Carsten Heinz and/or any other author mentioned
%% elsewhere in this file.
%% 
%% This file is distributed freely. You are not allowed to take money for
%% the use or distribution of this file, except for a nominal charge for
%% copying etc..
%% 
%% This file is distributed without any warranty, express or implied, as
%% to merchantability or fitness for any particular purpose.
%% 
%% Permission is granted to change this file. You are not allowed to
%% distribute any changed version this file, neither under the same name
%% nor under a different one.
%% 
\lst@Aspect{printpod}[t]{\lstKV@SetIfKey\lst@ifprintpod{#1}}
\lstset{printpod=false}% init
\global\lst@NewMode\lst@PODmode
\lst@MakeActive{cut}\global\let\lstCC@PODcut\lst@arg %
\gdef\lstCC@ProcessPOD{%
    \let\lstCC@next\relax %
    \@tempcnta\lst@column %
    \advance\@tempcnta\lst@length %
    \advance\@tempcnta-\lst@pos %
    \ifnum\@tempcnta=\z@ %
        \ifnum\lst@mode=\lst@PODmode %
            \def\lstCC@next{\lst@IfNextChars\lstCC@PODcut %
                {\lstCC@ProcessEndPOD}%
                {\lsts@POD\lst@eaten}}%
        \else %
            \lst@ifprintpod %
                \lstCC@BeginComment\lst@PODmode %
            \else %
                \lst@BeginDropOutput\lst@PODmode %
            \fi %
            \let\lstCC@next\lsts@POD %
        \fi %
    \fi \lstCC@next}%
\gdef\lstCC@ProcessEndPOD#1{%
    \let\lstCC@next\lstCC@ProcessEndPOD@ %
    \ifnum`#1=`\^^M\else \ifnum`#1=`\^^J\else %
        \def\lstCC@next{\lsts@POD\lst@eaten#1}%
    \fi \fi %
    \lstCC@next}
\gdef\lstCC@ProcessEndPOD@{%
    \lst@ifprintpod \lsts@POD\lst@eaten\lst@PrintToken \fi %
    \lst@LeaveMode}
\gdef\lstCC@SpecialUseAfter#1{%
    \lccode`\~=`#1\lccode`\/=`#1\lowercase{\lstCC@SpecialUseAfter@~/}}
\gdef\lstCC@SpecialUseAfter@#1#2#3#4{%
    \expandafter\let\csname lsts@SUA#2\endcsname#1%
    \def#1##1{%
        \ifnum`##1=`#3%
            \def\lstCC@next{\csname lsts@SUA#3\endcsname\relax #4}%
        \else %
            \def\lstCC@next{\csname lsts@SUA#3\endcsname ##1}%
        \fi %
        \lstCC@next}}
\lstdefinedrvlanguage{Perl}%
  {keywords={abs,accept,alarm,atan2,bind,binmode,bless,caller,chdir,%
      chmod,chomp,chop,chown,chr,chroot,close,closedir,connect,%
      continue,cos,crypt,dbmclose,dbmopen,defined,delete,die,do,dump,%
      each,else,elsif,endgrent,endhostent,endnetent,endprotoent,%
      endpwent,endservent,eof,eval,exec,exists,exit,exp,fcntl,fileno,%
      flock,for,foreach,fork,format,formline,getc,getgrent,getgrgid,%
      getgrnam,gethostbyaddr,gethostbyname,gethostent,getlogin,%
      getnetbyaddr,getnetbyname,getnetent,getpeername,getpgrp,%
      getppid,getpriority,getprotobyname,getprotobynumber,getprotoent,%
      getpwent,getpwnam,getpwuid,getservbyname,getservbyport,%
      getservent,getsockname,getsockopt,glob,gmtime,goto,grep,hex,if,%
      import,index,int,ioctl,join,keys,kill,last,lc,lcfirst,length,%
      link,listen,local,localtime,log,lstat,m,map,mkdir,msgctl,msgget,%
      msgrcv,msgsnd,my,next,no,oct,open,opendir,ord,pack,package,pipe,%
      pop,pos,print,printf,prototype,push,q,qq,quotemeta,qw,qx,rand,%
      read,readdir,readlink,recv,redo,ref,rename,require,reset,return,%
      reverse,rewinddir,rindex,rmdir,s,scalar,seek,seekdir,select,%
      semctl,semget,semop,send,setgrent,sethostent,setnetent,setpgrp,%
      setpriority,setprotoent,setpwent,setservent,setsockopt,shift,%
      shmctl,shmget,shmread,shmwrite,shutdown,sin,sleep,socket,%
      socketpair,sort,splice,split,sprintf,sqrt,srand,stat,study,sub,%
      substr,symlink,syscall,sysopen,sysread,system,syswrite,tell,%
      telldir,tie,tied,time,times,tr,truncate,uc,ucfirst,umask,undef,%
      unless,unlink,unpack,unshift,untie,until,use,utime,values,vec,%
      wait,waitpid,wantarray,warn,while,write,y},%
   sensitive=true,%
   commentline={\#},%
   stringizer=[b]{"'}%
  }%
\gdef\lstSCT@perl{%
    \lccode`\~=`\=\lowercase{\let\lsts@POD~\let~}\lstCC@ProcessPOD %
    \lstCC@SpecialUseAfter{$}{\#}{\lstCC@ProcessOther\#}}%
\endinput
%%
%% End of file `lstperl.sty'.
